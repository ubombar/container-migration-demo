// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: fsnotify.proto

package images

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MarkType int32

const (
	MarkType_INODE MarkType = 1
	MarkType_MOUNT MarkType = 2
)

// Enum value maps for MarkType.
var (
	MarkType_name = map[int32]string{
		1: "INODE",
		2: "MOUNT",
	}
	MarkType_value = map[string]int32{
		"INODE": 1,
		"MOUNT": 2,
	}
)

func (x MarkType) Enum() *MarkType {
	p := new(MarkType)
	*p = x
	return p
}

func (x MarkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarkType) Descriptor() protoreflect.EnumDescriptor {
	return file_fsnotify_proto_enumTypes[0].Descriptor()
}

func (MarkType) Type() protoreflect.EnumType {
	return &file_fsnotify_proto_enumTypes[0]
}

func (x MarkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MarkType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MarkType(num)
	return nil
}

// Deprecated: Use MarkType.Descriptor instead.
func (MarkType) EnumDescriptor() ([]byte, []int) {
	return file_fsnotify_proto_rawDescGZIP(), []int{0}
}

type InotifyWdEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *uint32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	IIno        *uint64  `protobuf:"varint,2,req,name=i_ino,json=iIno" json:"i_ino,omitempty"`
	Mask        *uint32  `protobuf:"varint,3,req,name=mask" json:"mask,omitempty"`
	IgnoredMask *uint32  `protobuf:"varint,4,req,name=ignored_mask,json=ignoredMask" json:"ignored_mask,omitempty"`
	SDev        *uint32  `protobuf:"varint,5,req,name=s_dev,json=sDev" json:"s_dev,omitempty"`
	Wd          *uint32  `protobuf:"varint,6,req,name=wd" json:"wd,omitempty"`
	FHandle     *FhEntry `protobuf:"bytes,7,req,name=f_handle,json=fHandle" json:"f_handle,omitempty"`
}

func (x *InotifyWdEntry) Reset() {
	*x = InotifyWdEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fsnotify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InotifyWdEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InotifyWdEntry) ProtoMessage() {}

func (x *InotifyWdEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fsnotify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InotifyWdEntry.ProtoReflect.Descriptor instead.
func (*InotifyWdEntry) Descriptor() ([]byte, []int) {
	return file_fsnotify_proto_rawDescGZIP(), []int{0}
}

func (x *InotifyWdEntry) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *InotifyWdEntry) GetIIno() uint64 {
	if x != nil && x.IIno != nil {
		return *x.IIno
	}
	return 0
}

func (x *InotifyWdEntry) GetMask() uint32 {
	if x != nil && x.Mask != nil {
		return *x.Mask
	}
	return 0
}

func (x *InotifyWdEntry) GetIgnoredMask() uint32 {
	if x != nil && x.IgnoredMask != nil {
		return *x.IgnoredMask
	}
	return 0
}

func (x *InotifyWdEntry) GetSDev() uint32 {
	if x != nil && x.SDev != nil {
		return *x.SDev
	}
	return 0
}

func (x *InotifyWdEntry) GetWd() uint32 {
	if x != nil && x.Wd != nil {
		return *x.Wd
	}
	return 0
}

func (x *InotifyWdEntry) GetFHandle() *FhEntry {
	if x != nil {
		return x.FHandle
	}
	return nil
}

type InotifyFileEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *uint32           `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Flags *uint32           `protobuf:"varint,2,req,name=flags" json:"flags,omitempty"`
	Fown  *FownEntry        `protobuf:"bytes,4,req,name=fown" json:"fown,omitempty"`
	Wd    []*InotifyWdEntry `protobuf:"bytes,5,rep,name=wd" json:"wd,omitempty"`
}

func (x *InotifyFileEntry) Reset() {
	*x = InotifyFileEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fsnotify_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InotifyFileEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InotifyFileEntry) ProtoMessage() {}

func (x *InotifyFileEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fsnotify_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InotifyFileEntry.ProtoReflect.Descriptor instead.
func (*InotifyFileEntry) Descriptor() ([]byte, []int) {
	return file_fsnotify_proto_rawDescGZIP(), []int{1}
}

func (x *InotifyFileEntry) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *InotifyFileEntry) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *InotifyFileEntry) GetFown() *FownEntry {
	if x != nil {
		return x.Fown
	}
	return nil
}

func (x *InotifyFileEntry) GetWd() []*InotifyWdEntry {
	if x != nil {
		return x.Wd
	}
	return nil
}

type FanotifyInodeMarkEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IIno    *uint64  `protobuf:"varint,1,req,name=i_ino,json=iIno" json:"i_ino,omitempty"`
	FHandle *FhEntry `protobuf:"bytes,2,req,name=f_handle,json=fHandle" json:"f_handle,omitempty"`
}

func (x *FanotifyInodeMarkEntry) Reset() {
	*x = FanotifyInodeMarkEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fsnotify_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FanotifyInodeMarkEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FanotifyInodeMarkEntry) ProtoMessage() {}

func (x *FanotifyInodeMarkEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fsnotify_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FanotifyInodeMarkEntry.ProtoReflect.Descriptor instead.
func (*FanotifyInodeMarkEntry) Descriptor() ([]byte, []int) {
	return file_fsnotify_proto_rawDescGZIP(), []int{2}
}

func (x *FanotifyInodeMarkEntry) GetIIno() uint64 {
	if x != nil && x.IIno != nil {
		return *x.IIno
	}
	return 0
}

func (x *FanotifyInodeMarkEntry) GetFHandle() *FhEntry {
	if x != nil {
		return x.FHandle
	}
	return nil
}

type FanotifyMountMarkEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MntId *uint32 `protobuf:"varint,1,req,name=mnt_id,json=mntId" json:"mnt_id,omitempty"`
	Path  *string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (x *FanotifyMountMarkEntry) Reset() {
	*x = FanotifyMountMarkEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fsnotify_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FanotifyMountMarkEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FanotifyMountMarkEntry) ProtoMessage() {}

func (x *FanotifyMountMarkEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fsnotify_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FanotifyMountMarkEntry.ProtoReflect.Descriptor instead.
func (*FanotifyMountMarkEntry) Descriptor() ([]byte, []int) {
	return file_fsnotify_proto_rawDescGZIP(), []int{3}
}

func (x *FanotifyMountMarkEntry) GetMntId() uint32 {
	if x != nil && x.MntId != nil {
		return *x.MntId
	}
	return 0
}

func (x *FanotifyMountMarkEntry) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

type FanotifyMarkEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *uint32                 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Type        *MarkType               `protobuf:"varint,2,req,name=type,enum=MarkType" json:"type,omitempty"`
	Mflags      *uint32                 `protobuf:"varint,3,req,name=mflags" json:"mflags,omitempty"`
	Mask        *uint32                 `protobuf:"varint,4,req,name=mask" json:"mask,omitempty"`
	IgnoredMask *uint32                 `protobuf:"varint,5,req,name=ignored_mask,json=ignoredMask" json:"ignored_mask,omitempty"`
	SDev        *uint32                 `protobuf:"varint,6,req,name=s_dev,json=sDev" json:"s_dev,omitempty"`
	Ie          *FanotifyInodeMarkEntry `protobuf:"bytes,7,opt,name=ie" json:"ie,omitempty"`
	Me          *FanotifyMountMarkEntry `protobuf:"bytes,8,opt,name=me" json:"me,omitempty"`
}

func (x *FanotifyMarkEntry) Reset() {
	*x = FanotifyMarkEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fsnotify_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FanotifyMarkEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FanotifyMarkEntry) ProtoMessage() {}

func (x *FanotifyMarkEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fsnotify_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FanotifyMarkEntry.ProtoReflect.Descriptor instead.
func (*FanotifyMarkEntry) Descriptor() ([]byte, []int) {
	return file_fsnotify_proto_rawDescGZIP(), []int{4}
}

func (x *FanotifyMarkEntry) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FanotifyMarkEntry) GetType() MarkType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MarkType_INODE
}

func (x *FanotifyMarkEntry) GetMflags() uint32 {
	if x != nil && x.Mflags != nil {
		return *x.Mflags
	}
	return 0
}

func (x *FanotifyMarkEntry) GetMask() uint32 {
	if x != nil && x.Mask != nil {
		return *x.Mask
	}
	return 0
}

func (x *FanotifyMarkEntry) GetIgnoredMask() uint32 {
	if x != nil && x.IgnoredMask != nil {
		return *x.IgnoredMask
	}
	return 0
}

func (x *FanotifyMarkEntry) GetSDev() uint32 {
	if x != nil && x.SDev != nil {
		return *x.SDev
	}
	return 0
}

func (x *FanotifyMarkEntry) GetIe() *FanotifyInodeMarkEntry {
	if x != nil {
		return x.Ie
	}
	return nil
}

func (x *FanotifyMarkEntry) GetMe() *FanotifyMountMarkEntry {
	if x != nil {
		return x.Me
	}
	return nil
}

type FanotifyFileEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *uint32              `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Flags   *uint32              `protobuf:"varint,2,req,name=flags" json:"flags,omitempty"`
	Fown    *FownEntry           `protobuf:"bytes,3,req,name=fown" json:"fown,omitempty"`
	Faflags *uint32              `protobuf:"varint,4,req,name=faflags" json:"faflags,omitempty"`
	Evflags *uint32              `protobuf:"varint,5,req,name=evflags" json:"evflags,omitempty"`
	Mark    []*FanotifyMarkEntry `protobuf:"bytes,6,rep,name=mark" json:"mark,omitempty"`
}

func (x *FanotifyFileEntry) Reset() {
	*x = FanotifyFileEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fsnotify_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FanotifyFileEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FanotifyFileEntry) ProtoMessage() {}

func (x *FanotifyFileEntry) ProtoReflect() protoreflect.Message {
	mi := &file_fsnotify_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FanotifyFileEntry.ProtoReflect.Descriptor instead.
func (*FanotifyFileEntry) Descriptor() ([]byte, []int) {
	return file_fsnotify_proto_rawDescGZIP(), []int{5}
}

func (x *FanotifyFileEntry) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FanotifyFileEntry) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *FanotifyFileEntry) GetFown() *FownEntry {
	if x != nil {
		return x.Fown
	}
	return nil
}

func (x *FanotifyFileEntry) GetFaflags() uint32 {
	if x != nil && x.Faflags != nil {
		return *x.Faflags
	}
	return 0
}

func (x *FanotifyFileEntry) GetEvflags() uint32 {
	if x != nil && x.Evflags != nil {
		return *x.Evflags
	}
	return 0
}

func (x *FanotifyFileEntry) GetMark() []*FanotifyMarkEntry {
	if x != nil {
		return x.Mark
	}
	return nil
}

var File_fsnotify_proto protoreflect.FileDescriptor

var file_fsnotify_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x66, 0x73, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0a, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x08, 0x66, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x66, 0x6f, 0x77, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xce, 0x01, 0x0a, 0x10, 0x69, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x77,
	0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x5f, 0x69, 0x6e, 0x6f,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x04, 0x69, 0x49, 0x6e, 0x6f, 0x12, 0x19, 0x0a, 0x04,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x42, 0x05, 0xd2, 0x3f, 0x02, 0x08,
	0x01, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x28, 0x0a, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x42, 0x05, 0xd2,
	0x3f, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x12, 0x1a, 0x0a, 0x05, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0d,
	0x42, 0x05, 0xd2, 0x3f, 0x02, 0x20, 0x01, 0x52, 0x04, 0x73, 0x44, 0x65, 0x76, 0x12, 0x0e, 0x0a,
	0x02, 0x77, 0x64, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x77, 0x64, 0x12, 0x24, 0x0a,
	0x08, 0x66, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x66, 0x68, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x12, 0x69, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x42, 0x05, 0xd2, 0x3f, 0x02, 0x08, 0x01,
	0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x6f, 0x77, 0x6e, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x66, 0x6f, 0x77, 0x6e, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x66, 0x6f, 0x77, 0x6e, 0x12, 0x21, 0x0a, 0x02, 0x77, 0x64, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x77,
	0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x77, 0x64, 0x22, 0x56, 0x0a, 0x19, 0x66,
	0x61, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x61,
	0x72, 0x6b, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x5f, 0x69, 0x6e,
	0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x04, 0x69, 0x49, 0x6e, 0x6f, 0x12, 0x24, 0x0a,
	0x08, 0x66, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x66, 0x68, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x46, 0x0a, 0x19, 0x66, 0x61, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x15, 0x0a, 0x06, 0x6d, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x05, 0x6d, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x9d, 0x02, 0x0a, 0x13,
	0x66, 0x61, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0e, 0x32, 0x0a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x06, 0x6d, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0d, 0x42, 0x05, 0xd2, 0x3f, 0x02, 0x08, 0x01, 0x52, 0x06, 0x6d, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x19, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d,
	0x42, 0x05, 0xd2, 0x3f, 0x02, 0x08, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x28, 0x0a,
	0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x0d, 0x42, 0x05, 0xd2, 0x3f, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1a, 0x0a, 0x05, 0x73, 0x5f, 0x64, 0x65, 0x76,
	0x18, 0x06, 0x20, 0x02, 0x28, 0x0d, 0x42, 0x05, 0xd2, 0x3f, 0x02, 0x20, 0x01, 0x52, 0x04, 0x73,
	0x44, 0x65, 0x76, 0x12, 0x2a, 0x0a, 0x02, 0x69, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x66, 0x61, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x69, 0x65, 0x12,
	0x2a, 0x0a, 0x02, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x61,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x72,
	0x6b, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x6d, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x13,
	0x66, 0x61, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0d, 0x42, 0x05, 0xd2, 0x3f, 0x02, 0x08, 0x01, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x12, 0x1f, 0x0a, 0x04, 0x66, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x66, 0x6f, 0x77, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x66, 0x6f, 0x77,
	0x6e, 0x12, 0x1f, 0x0a, 0x07, 0x66, 0x61, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x0d, 0x42, 0x05, 0xd2, 0x3f, 0x02, 0x08, 0x01, 0x52, 0x07, 0x66, 0x61, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x1f, 0x0a, 0x07, 0x65, 0x76, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x0d, 0x42, 0x05, 0xd2, 0x3f, 0x02, 0x08, 0x01, 0x52, 0x07, 0x65, 0x76, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x66, 0x61, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6d, 0x61, 0x72,
	0x6b, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x2a, 0x21, 0x0a,
	0x09, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e,
	0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x02,
}

var (
	file_fsnotify_proto_rawDescOnce sync.Once
	file_fsnotify_proto_rawDescData = file_fsnotify_proto_rawDesc
)

func file_fsnotify_proto_rawDescGZIP() []byte {
	file_fsnotify_proto_rawDescOnce.Do(func() {
		file_fsnotify_proto_rawDescData = protoimpl.X.CompressGZIP(file_fsnotify_proto_rawDescData)
	})
	return file_fsnotify_proto_rawDescData
}

var file_fsnotify_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fsnotify_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_fsnotify_proto_goTypes = []interface{}{
	(MarkType)(0),                  // 0: mark_type
	(*InotifyWdEntry)(nil),         // 1: inotify_wd_entry
	(*InotifyFileEntry)(nil),       // 2: inotify_file_entry
	(*FanotifyInodeMarkEntry)(nil), // 3: fanotify_inode_mark_entry
	(*FanotifyMountMarkEntry)(nil), // 4: fanotify_mount_mark_entry
	(*FanotifyMarkEntry)(nil),      // 5: fanotify_mark_entry
	(*FanotifyFileEntry)(nil),      // 6: fanotify_file_entry
	(*FhEntry)(nil),                // 7: fh_entry
	(*FownEntry)(nil),              // 8: fown_entry
}
var file_fsnotify_proto_depIdxs = []int32{
	7, // 0: inotify_wd_entry.f_handle:type_name -> fh_entry
	8, // 1: inotify_file_entry.fown:type_name -> fown_entry
	1, // 2: inotify_file_entry.wd:type_name -> inotify_wd_entry
	7, // 3: fanotify_inode_mark_entry.f_handle:type_name -> fh_entry
	0, // 4: fanotify_mark_entry.type:type_name -> mark_type
	3, // 5: fanotify_mark_entry.ie:type_name -> fanotify_inode_mark_entry
	4, // 6: fanotify_mark_entry.me:type_name -> fanotify_mount_mark_entry
	8, // 7: fanotify_file_entry.fown:type_name -> fown_entry
	5, // 8: fanotify_file_entry.mark:type_name -> fanotify_mark_entry
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_fsnotify_proto_init() }
func file_fsnotify_proto_init() {
	if File_fsnotify_proto != nil {
		return
	}
	file_opts_proto_init()
	file_fh_proto_init()
	file_fown_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fsnotify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InotifyWdEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fsnotify_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InotifyFileEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fsnotify_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FanotifyInodeMarkEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fsnotify_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FanotifyMountMarkEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fsnotify_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FanotifyMarkEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fsnotify_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FanotifyFileEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fsnotify_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fsnotify_proto_goTypes,
		DependencyIndexes: file_fsnotify_proto_depIdxs,
		EnumInfos:         file_fsnotify_proto_enumTypes,
		MessageInfos:      file_fsnotify_proto_msgTypes,
	}.Build()
	File_fsnotify_proto = out.File
	file_fsnotify_proto_rawDesc = nil
	file_fsnotify_proto_goTypes = nil
	file_fsnotify_proto_depIdxs = nil
}
