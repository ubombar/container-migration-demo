// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: tcp-stream.proto

package images

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TcpStreamEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InqLen    *uint32 `protobuf:"varint,1,req,name=inq_len,json=inqLen" json:"inq_len,omitempty"`
	InqSeq    *uint32 `protobuf:"varint,2,req,name=inq_seq,json=inqSeq" json:"inq_seq,omitempty"`
	OutqLen   *uint32 `protobuf:"varint,3,req,name=outq_len,json=outqLen" json:"outq_len,omitempty"` // unsent and sent data in the send queue
	OutqSeq   *uint32 `protobuf:"varint,4,req,name=outq_seq,json=outqSeq" json:"outq_seq,omitempty"`
	OptMask   *uint32 `protobuf:"varint,5,req,name=opt_mask,json=optMask" json:"opt_mask,omitempty"` // TCPI_OPT_ bits
	SndWscale *uint32 `protobuf:"varint,6,req,name=snd_wscale,json=sndWscale" json:"snd_wscale,omitempty"`
	MssClamp  *uint32 `protobuf:"varint,7,req,name=mss_clamp,json=mssClamp" json:"mss_clamp,omitempty"`
	RcvWscale *uint32 `protobuf:"varint,8,opt,name=rcv_wscale,json=rcvWscale" json:"rcv_wscale,omitempty"`
	Timestamp *uint32 `protobuf:"varint,9,opt,name=timestamp" json:"timestamp,omitempty"`
	Cork      *bool   `protobuf:"varint,10,opt,name=cork" json:"cork,omitempty"`
	Nodelay   *bool   `protobuf:"varint,11,opt,name=nodelay" json:"nodelay,omitempty"`
	UnsqLen   *uint32 `protobuf:"varint,12,opt,name=unsq_len,json=unsqLen" json:"unsq_len,omitempty"` // unsent data in the send queue
	SndWl1    *uint32 `protobuf:"varint,13,opt,name=snd_wl1,json=sndWl1" json:"snd_wl1,omitempty"`
	SndWnd    *uint32 `protobuf:"varint,14,opt,name=snd_wnd,json=sndWnd" json:"snd_wnd,omitempty"`
	MaxWindow *uint32 `protobuf:"varint,15,opt,name=max_window,json=maxWindow" json:"max_window,omitempty"`
	RcvWnd    *uint32 `protobuf:"varint,16,opt,name=rcv_wnd,json=rcvWnd" json:"rcv_wnd,omitempty"`
	RcvWup    *uint32 `protobuf:"varint,17,opt,name=rcv_wup,json=rcvWup" json:"rcv_wup,omitempty"`
}

func (x *TcpStreamEntry) Reset() {
	*x = TcpStreamEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tcp_stream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TcpStreamEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpStreamEntry) ProtoMessage() {}

func (x *TcpStreamEntry) ProtoReflect() protoreflect.Message {
	mi := &file_tcp_stream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpStreamEntry.ProtoReflect.Descriptor instead.
func (*TcpStreamEntry) Descriptor() ([]byte, []int) {
	return file_tcp_stream_proto_rawDescGZIP(), []int{0}
}

func (x *TcpStreamEntry) GetInqLen() uint32 {
	if x != nil && x.InqLen != nil {
		return *x.InqLen
	}
	return 0
}

func (x *TcpStreamEntry) GetInqSeq() uint32 {
	if x != nil && x.InqSeq != nil {
		return *x.InqSeq
	}
	return 0
}

func (x *TcpStreamEntry) GetOutqLen() uint32 {
	if x != nil && x.OutqLen != nil {
		return *x.OutqLen
	}
	return 0
}

func (x *TcpStreamEntry) GetOutqSeq() uint32 {
	if x != nil && x.OutqSeq != nil {
		return *x.OutqSeq
	}
	return 0
}

func (x *TcpStreamEntry) GetOptMask() uint32 {
	if x != nil && x.OptMask != nil {
		return *x.OptMask
	}
	return 0
}

func (x *TcpStreamEntry) GetSndWscale() uint32 {
	if x != nil && x.SndWscale != nil {
		return *x.SndWscale
	}
	return 0
}

func (x *TcpStreamEntry) GetMssClamp() uint32 {
	if x != nil && x.MssClamp != nil {
		return *x.MssClamp
	}
	return 0
}

func (x *TcpStreamEntry) GetRcvWscale() uint32 {
	if x != nil && x.RcvWscale != nil {
		return *x.RcvWscale
	}
	return 0
}

func (x *TcpStreamEntry) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *TcpStreamEntry) GetCork() bool {
	if x != nil && x.Cork != nil {
		return *x.Cork
	}
	return false
}

func (x *TcpStreamEntry) GetNodelay() bool {
	if x != nil && x.Nodelay != nil {
		return *x.Nodelay
	}
	return false
}

func (x *TcpStreamEntry) GetUnsqLen() uint32 {
	if x != nil && x.UnsqLen != nil {
		return *x.UnsqLen
	}
	return 0
}

func (x *TcpStreamEntry) GetSndWl1() uint32 {
	if x != nil && x.SndWl1 != nil {
		return *x.SndWl1
	}
	return 0
}

func (x *TcpStreamEntry) GetSndWnd() uint32 {
	if x != nil && x.SndWnd != nil {
		return *x.SndWnd
	}
	return 0
}

func (x *TcpStreamEntry) GetMaxWindow() uint32 {
	if x != nil && x.MaxWindow != nil {
		return *x.MaxWindow
	}
	return 0
}

func (x *TcpStreamEntry) GetRcvWnd() uint32 {
	if x != nil && x.RcvWnd != nil {
		return *x.RcvWnd
	}
	return 0
}

func (x *TcpStreamEntry) GetRcvWup() uint32 {
	if x != nil && x.RcvWup != nil {
		return *x.RcvWup
	}
	return 0
}

var File_tcp_stream_proto protoreflect.FileDescriptor

var file_tcp_stream_proto_rawDesc = []byte{
	0x0a, 0x10, 0x74, 0x63, 0x70, 0x2d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0a, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1,
	0x03, 0x0a, 0x10, 0x74, 0x63, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x71, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x6e, 0x71, 0x4c, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x6e, 0x71, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x69,
	0x6e, 0x71, 0x53, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x71, 0x5f, 0x6c, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x71, 0x4c, 0x65, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x71, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x71, 0x53, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x08, 0x6f,
	0x70, 0x74, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0d, 0x42, 0x05, 0xd2,
	0x3f, 0x02, 0x08, 0x01, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x6e, 0x64, 0x5f, 0x77, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x6e, 0x64, 0x57, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x73, 0x73, 0x5f, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x08, 0x6d, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x63, 0x76,
	0x5f, 0x77, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72,
	0x63, 0x76, 0x57, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x71, 0x5f, 0x6c, 0x65, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x6e, 0x73, 0x71, 0x4c, 0x65, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x6e, 0x64, 0x5f, 0x77, 0x6c, 0x31, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x73, 0x6e, 0x64, 0x57, 0x6c, 0x31, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6e, 0x64, 0x5f,
	0x77, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6e, 0x64, 0x57, 0x6e,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x63, 0x76, 0x5f, 0x77, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x72, 0x63, 0x76, 0x57, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x63, 0x76,
	0x5f, 0x77, 0x75, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x63, 0x76, 0x57,
	0x75, 0x70,
}

var (
	file_tcp_stream_proto_rawDescOnce sync.Once
	file_tcp_stream_proto_rawDescData = file_tcp_stream_proto_rawDesc
)

func file_tcp_stream_proto_rawDescGZIP() []byte {
	file_tcp_stream_proto_rawDescOnce.Do(func() {
		file_tcp_stream_proto_rawDescData = protoimpl.X.CompressGZIP(file_tcp_stream_proto_rawDescData)
	})
	return file_tcp_stream_proto_rawDescData
}

var file_tcp_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tcp_stream_proto_goTypes = []interface{}{
	(*TcpStreamEntry)(nil), // 0: tcp_stream_entry
}
var file_tcp_stream_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tcp_stream_proto_init() }
func file_tcp_stream_proto_init() {
	if File_tcp_stream_proto != nil {
		return
	}
	file_opts_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tcp_stream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TcpStreamEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tcp_stream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tcp_stream_proto_goTypes,
		DependencyIndexes: file_tcp_stream_proto_depIdxs,
		MessageInfos:      file_tcp_stream_proto_msgTypes,
	}.Build()
	File_tcp_stream_proto = out.File
	file_tcp_stream_proto_rawDesc = nil
	file_tcp_stream_proto_goTypes = nil
	file_tcp_stream_proto_depIdxs = nil
}
