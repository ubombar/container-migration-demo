// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: core-ppc64.proto

package images

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserPpc64RegsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Following is the list of registers starting at r0.
	Gpr      []uint64 `protobuf:"varint,1,rep,name=gpr" json:"gpr,omitempty"`
	Nip      *uint64  `protobuf:"varint,2,req,name=nip" json:"nip,omitempty"`
	Msr      *uint64  `protobuf:"varint,3,req,name=msr" json:"msr,omitempty"`
	OrigGpr3 *uint64  `protobuf:"varint,4,req,name=orig_gpr3,json=origGpr3" json:"orig_gpr3,omitempty"`
	Ctr      *uint64  `protobuf:"varint,5,req,name=ctr" json:"ctr,omitempty"`
	Link     *uint64  `protobuf:"varint,6,req,name=link" json:"link,omitempty"`
	Xer      *uint64  `protobuf:"varint,7,req,name=xer" json:"xer,omitempty"`
	Ccr      *uint64  `protobuf:"varint,8,req,name=ccr" json:"ccr,omitempty"`
	Trap     *uint64  `protobuf:"varint,9,req,name=trap" json:"trap,omitempty"`
	// For Transactional memory support since P8
	Texasr *uint64 `protobuf:"varint,10,opt,name=texasr" json:"texasr,omitempty"`
	Tfhar  *uint64 `protobuf:"varint,11,opt,name=tfhar" json:"tfhar,omitempty"`
	Tfiar  *uint64 `protobuf:"varint,12,opt,name=tfiar" json:"tfiar,omitempty"`
}

func (x *UserPpc64RegsEntry) Reset() {
	*x = UserPpc64RegsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_ppc64_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPpc64RegsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPpc64RegsEntry) ProtoMessage() {}

func (x *UserPpc64RegsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPpc64RegsEntry.ProtoReflect.Descriptor instead.
func (*UserPpc64RegsEntry) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{0}
}

func (x *UserPpc64RegsEntry) GetGpr() []uint64 {
	if x != nil {
		return x.Gpr
	}
	return nil
}

func (x *UserPpc64RegsEntry) GetNip() uint64 {
	if x != nil && x.Nip != nil {
		return *x.Nip
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetMsr() uint64 {
	if x != nil && x.Msr != nil {
		return *x.Msr
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetOrigGpr3() uint64 {
	if x != nil && x.OrigGpr3 != nil {
		return *x.OrigGpr3
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetCtr() uint64 {
	if x != nil && x.Ctr != nil {
		return *x.Ctr
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetLink() uint64 {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetXer() uint64 {
	if x != nil && x.Xer != nil {
		return *x.Xer
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetCcr() uint64 {
	if x != nil && x.Ccr != nil {
		return *x.Ccr
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetTrap() uint64 {
	if x != nil && x.Trap != nil {
		return *x.Trap
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetTexasr() uint64 {
	if x != nil && x.Texasr != nil {
		return *x.Texasr
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetTfhar() uint64 {
	if x != nil && x.Tfhar != nil {
		return *x.Tfhar
	}
	return 0
}

func (x *UserPpc64RegsEntry) GetTfiar() uint64 {
	if x != nil && x.Tfiar != nil {
		return *x.Tfiar
	}
	return 0
}

type UserPpc64FpstateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Following is the list of registers starting at fpr0
	Fpregs []uint64 `protobuf:"varint,1,rep,name=fpregs" json:"fpregs,omitempty"`
}

func (x *UserPpc64FpstateEntry) Reset() {
	*x = UserPpc64FpstateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_ppc64_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPpc64FpstateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPpc64FpstateEntry) ProtoMessage() {}

func (x *UserPpc64FpstateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPpc64FpstateEntry.ProtoReflect.Descriptor instead.
func (*UserPpc64FpstateEntry) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{1}
}

func (x *UserPpc64FpstateEntry) GetFpregs() []uint64 {
	if x != nil {
		return x.Fpregs
	}
	return nil
}

type UserPpc64VrstateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Altivec registers
	// The vector registers are 128bit registers (VSR[32..63]).
	// The following vregs entry will store first the high part then the
	// low one:
	//
	//	VR0 = vrregs[0] << 64 | vrregs[1];
	//	VR1 = vrregs[2] << 64 | vrregs[3];
	//	..
	//
	// The last entry stores in a 128bit field the VSCR which is a 32bit
	// value returned by the kernel in a 128 field.
	Vrregs []uint64 `protobuf:"varint,1,rep,name=vrregs" json:"vrregs,omitempty"`
	Vrsave *uint32  `protobuf:"varint,2,req,name=vrsave" json:"vrsave,omitempty"`
}

func (x *UserPpc64VrstateEntry) Reset() {
	*x = UserPpc64VrstateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_ppc64_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPpc64VrstateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPpc64VrstateEntry) ProtoMessage() {}

func (x *UserPpc64VrstateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPpc64VrstateEntry.ProtoReflect.Descriptor instead.
func (*UserPpc64VrstateEntry) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{2}
}

func (x *UserPpc64VrstateEntry) GetVrregs() []uint64 {
	if x != nil {
		return x.Vrregs
	}
	return nil
}

func (x *UserPpc64VrstateEntry) GetVrsave() uint32 {
	if x != nil && x.Vrsave != nil {
		return *x.Vrsave
	}
	return 0
}

type UserPpc64VsxstateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// VSX registers
	// The vector-scale registers are 128bit registers (VSR[0..64]).
	// Since there is an overlapping over the VSX registers by the FPR and
	// the Altivec registers, only the lower part of the first 32 VSX
	// registers have to be saved.
	Vsxregs []uint64 `protobuf:"varint,1,rep,name=vsxregs" json:"vsxregs,omitempty"`
}

func (x *UserPpc64VsxstateEntry) Reset() {
	*x = UserPpc64VsxstateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_ppc64_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPpc64VsxstateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPpc64VsxstateEntry) ProtoMessage() {}

func (x *UserPpc64VsxstateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPpc64VsxstateEntry.ProtoReflect.Descriptor instead.
func (*UserPpc64VsxstateEntry) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{3}
}

func (x *UserPpc64VsxstateEntry) GetVsxregs() []uint64 {
	if x != nil {
		return x.Vsxregs
	}
	return nil
}

// Transactional memory operation's state
type UserPpc64TmRegsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gpregs   *UserPpc64RegsEntry     `protobuf:"bytes,1,req,name=gpregs" json:"gpregs,omitempty"`
	Fpstate  *UserPpc64FpstateEntry  `protobuf:"bytes,2,opt,name=fpstate" json:"fpstate,omitempty"`
	Vrstate  *UserPpc64VrstateEntry  `protobuf:"bytes,3,opt,name=vrstate" json:"vrstate,omitempty"`
	Vsxstate *UserPpc64VsxstateEntry `protobuf:"bytes,4,opt,name=vsxstate" json:"vsxstate,omitempty"`
}

func (x *UserPpc64TmRegsEntry) Reset() {
	*x = UserPpc64TmRegsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_ppc64_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPpc64TmRegsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPpc64TmRegsEntry) ProtoMessage() {}

func (x *UserPpc64TmRegsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPpc64TmRegsEntry.ProtoReflect.Descriptor instead.
func (*UserPpc64TmRegsEntry) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{4}
}

func (x *UserPpc64TmRegsEntry) GetGpregs() *UserPpc64RegsEntry {
	if x != nil {
		return x.Gpregs
	}
	return nil
}

func (x *UserPpc64TmRegsEntry) GetFpstate() *UserPpc64FpstateEntry {
	if x != nil {
		return x.Fpstate
	}
	return nil
}

func (x *UserPpc64TmRegsEntry) GetVrstate() *UserPpc64VrstateEntry {
	if x != nil {
		return x.Vrstate
	}
	return nil
}

func (x *UserPpc64TmRegsEntry) GetVsxstate() *UserPpc64VsxstateEntry {
	if x != nil {
		return x.Vsxstate
	}
	return nil
}

type ThreadInfoPpc64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClearTidAddr *uint64                 `protobuf:"varint,1,req,name=clear_tid_addr,json=clearTidAddr" json:"clear_tid_addr,omitempty"`
	Gpregs       *UserPpc64RegsEntry     `protobuf:"bytes,2,req,name=gpregs" json:"gpregs,omitempty"`
	Fpstate      *UserPpc64FpstateEntry  `protobuf:"bytes,3,opt,name=fpstate" json:"fpstate,omitempty"`
	Vrstate      *UserPpc64VrstateEntry  `protobuf:"bytes,4,opt,name=vrstate" json:"vrstate,omitempty"`
	Vsxstate     *UserPpc64VsxstateEntry `protobuf:"bytes,5,opt,name=vsxstate" json:"vsxstate,omitempty"`
	Tmstate      *UserPpc64TmRegsEntry   `protobuf:"bytes,6,opt,name=tmstate" json:"tmstate,omitempty"`
}

func (x *ThreadInfoPpc64) Reset() {
	*x = ThreadInfoPpc64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_ppc64_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadInfoPpc64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadInfoPpc64) ProtoMessage() {}

func (x *ThreadInfoPpc64) ProtoReflect() protoreflect.Message {
	mi := &file_core_ppc64_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadInfoPpc64.ProtoReflect.Descriptor instead.
func (*ThreadInfoPpc64) Descriptor() ([]byte, []int) {
	return file_core_ppc64_proto_rawDescGZIP(), []int{5}
}

func (x *ThreadInfoPpc64) GetClearTidAddr() uint64 {
	if x != nil && x.ClearTidAddr != nil {
		return *x.ClearTidAddr
	}
	return 0
}

func (x *ThreadInfoPpc64) GetGpregs() *UserPpc64RegsEntry {
	if x != nil {
		return x.Gpregs
	}
	return nil
}

func (x *ThreadInfoPpc64) GetFpstate() *UserPpc64FpstateEntry {
	if x != nil {
		return x.Fpstate
	}
	return nil
}

func (x *ThreadInfoPpc64) GetVrstate() *UserPpc64VrstateEntry {
	if x != nil {
		return x.Vrstate
	}
	return nil
}

func (x *ThreadInfoPpc64) GetVsxstate() *UserPpc64VsxstateEntry {
	if x != nil {
		return x.Vsxstate
	}
	return nil
}

func (x *ThreadInfoPpc64) GetTmstate() *UserPpc64TmRegsEntry {
	if x != nil {
		return x.Tmstate
	}
	return nil
}

var File_core_ppc64_proto protoreflect.FileDescriptor

var file_core_ppc64_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x70, 0x70, 0x63, 0x36, 0x34, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0a, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c,
	0x02, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70, 0x63, 0x36, 0x34, 0x5f, 0x72, 0x65,
	0x67, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x70, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x67, 0x70, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x73, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x5f, 0x67, 0x70, 0x72, 0x33, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x04, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x47, 0x70, 0x72, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x74, 0x72, 0x18, 0x05, 0x20, 0x02, 0x28, 0x04, 0x52, 0x03, 0x63, 0x74, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x02, 0x28, 0x04, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x65, 0x72, 0x18, 0x07, 0x20, 0x02, 0x28, 0x04, 0x52, 0x03,
	0x78, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x63, 0x72, 0x18, 0x08, 0x20, 0x02, 0x28, 0x04,
	0x52, 0x03, 0x63, 0x63, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x72, 0x61, 0x70, 0x18, 0x09, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x04, 0x74, 0x72, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x78,
	0x61, 0x73, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65, 0x78, 0x61, 0x73,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x66, 0x68, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x74, 0x66, 0x68, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x66, 0x69, 0x61, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x66, 0x69, 0x61, 0x72, 0x22, 0x32, 0x0a,
	0x18, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70, 0x63, 0x36, 0x34, 0x5f, 0x66, 0x70, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x70, 0x72,
	0x65, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x66, 0x70, 0x72, 0x65, 0x67,
	0x73, 0x22, 0x4a, 0x0a, 0x18, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70, 0x63, 0x36, 0x34, 0x5f,
	0x76, 0x72, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x72, 0x72, 0x65, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x76,
	0x72, 0x72, 0x65, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x72, 0x73, 0x61, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x72, 0x73, 0x61, 0x76, 0x65, 0x22, 0x35, 0x0a,
	0x19, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70, 0x63, 0x36, 0x34, 0x5f, 0x76, 0x73, 0x78, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x73,
	0x78, 0x72, 0x65, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x76, 0x73, 0x78,
	0x72, 0x65, 0x67, 0x73, 0x22, 0xec, 0x01, 0x0a, 0x18, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70,
	0x63, 0x36, 0x34, 0x5f, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x67, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x2e, 0x0a, 0x06, 0x67, 0x70, 0x72, 0x65, 0x67, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70, 0x63, 0x36, 0x34, 0x5f, 0x72,
	0x65, 0x67, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x67, 0x70, 0x72, 0x65, 0x67,
	0x73, 0x12, 0x33, 0x0a, 0x07, 0x66, 0x70, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70, 0x63, 0x36, 0x34, 0x5f,
	0x66, 0x70, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66,
	0x70, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x76, 0x72, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x70, 0x63, 0x36, 0x34, 0x5f, 0x76, 0x72, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x76, 0x72, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x76,
	0x73, 0x78, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70, 0x63, 0x36, 0x34, 0x5f, 0x76, 0x73, 0x78, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x76, 0x73, 0x78, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0xce, 0x02, 0x0a, 0x11, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x70, 0x70, 0x63, 0x36, 0x34, 0x12, 0x2b, 0x0a, 0x0e, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x5f, 0x74, 0x69, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x04, 0x42, 0x05, 0xd2, 0x3f, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x54,
	0x69, 0x64, 0x41, 0x64, 0x64, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x67, 0x70, 0x72, 0x65, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70,
	0x63, 0x36, 0x34, 0x5f, 0x72, 0x65, 0x67, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x05,
	0xd2, 0x3f, 0x02, 0x08, 0x01, 0x52, 0x06, 0x67, 0x70, 0x72, 0x65, 0x67, 0x73, 0x12, 0x33, 0x0a,
	0x07, 0x66, 0x70, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70, 0x63, 0x36, 0x34, 0x5f, 0x66, 0x70, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x70, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x76, 0x72, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70, 0x63, 0x36, 0x34,
	0x5f, 0x76, 0x72, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x76, 0x72, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x73, 0x78, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x70, 0x70, 0x63, 0x36, 0x34, 0x5f, 0x76, 0x73, 0x78, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x76, 0x73, 0x78, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x74, 0x6d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x70, 0x63, 0x36, 0x34, 0x5f, 0x74, 0x6d,
	0x5f, 0x72, 0x65, 0x67, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x74, 0x6d, 0x73,
	0x74, 0x61, 0x74, 0x65,
}

var (
	file_core_ppc64_proto_rawDescOnce sync.Once
	file_core_ppc64_proto_rawDescData = file_core_ppc64_proto_rawDesc
)

func file_core_ppc64_proto_rawDescGZIP() []byte {
	file_core_ppc64_proto_rawDescOnce.Do(func() {
		file_core_ppc64_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_ppc64_proto_rawDescData)
	})
	return file_core_ppc64_proto_rawDescData
}

var file_core_ppc64_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_core_ppc64_proto_goTypes = []interface{}{
	(*UserPpc64RegsEntry)(nil),     // 0: user_ppc64_regs_entry
	(*UserPpc64FpstateEntry)(nil),  // 1: user_ppc64_fpstate_entry
	(*UserPpc64VrstateEntry)(nil),  // 2: user_ppc64_vrstate_entry
	(*UserPpc64VsxstateEntry)(nil), // 3: user_ppc64_vsxstate_entry
	(*UserPpc64TmRegsEntry)(nil),   // 4: user_ppc64_tm_regs_entry
	(*ThreadInfoPpc64)(nil),        // 5: thread_info_ppc64
}
var file_core_ppc64_proto_depIdxs = []int32{
	0, // 0: user_ppc64_tm_regs_entry.gpregs:type_name -> user_ppc64_regs_entry
	1, // 1: user_ppc64_tm_regs_entry.fpstate:type_name -> user_ppc64_fpstate_entry
	2, // 2: user_ppc64_tm_regs_entry.vrstate:type_name -> user_ppc64_vrstate_entry
	3, // 3: user_ppc64_tm_regs_entry.vsxstate:type_name -> user_ppc64_vsxstate_entry
	0, // 4: thread_info_ppc64.gpregs:type_name -> user_ppc64_regs_entry
	1, // 5: thread_info_ppc64.fpstate:type_name -> user_ppc64_fpstate_entry
	2, // 6: thread_info_ppc64.vrstate:type_name -> user_ppc64_vrstate_entry
	3, // 7: thread_info_ppc64.vsxstate:type_name -> user_ppc64_vsxstate_entry
	4, // 8: thread_info_ppc64.tmstate:type_name -> user_ppc64_tm_regs_entry
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_core_ppc64_proto_init() }
func file_core_ppc64_proto_init() {
	if File_core_ppc64_proto != nil {
		return
	}
	file_opts_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_core_ppc64_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPpc64RegsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_ppc64_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPpc64FpstateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_ppc64_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPpc64VrstateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_ppc64_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPpc64VsxstateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_ppc64_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPpc64TmRegsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_ppc64_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadInfoPpc64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_ppc64_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_ppc64_proto_goTypes,
		DependencyIndexes: file_core_ppc64_proto_depIdxs,
		MessageInfos:      file_core_ppc64_proto_msgTypes,
	}.Build()
	File_core_ppc64_proto = out.File
	file_core_ppc64_proto_rawDesc = nil
	file_core_ppc64_proto_goTypes = nil
	file_core_ppc64_proto_depIdxs = nil
}
